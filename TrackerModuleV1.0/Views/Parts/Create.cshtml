@model TrackerModuleV1._0.Models.PTM.Part

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<head>

    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script>
        $(document).ready(function () {
            $("#PartType").change(function () {
                var PartType = $("#PartType").val();
                $("#PartTypelabel").text(PartType);
                ////////

                
            //    var partTypeList = Enum.GetValues(typeof (SubCategory))
            //        .Cast<PartType>()
            //        .Select(t => new AccessClass
            //    {
            //                ID = ((int)t),
            //        Name = t.ToString()
            //});
            //ViewBag.ListData = partTypeList;

            ///////

                //alert(PartType);
            });


            $("#SubCategory").change(function () {
                var SubCategory = $("#SubCategory").val();
                $("#SubCategorylabel").text(SubCategory);
                //alert(SubCategory);
            });

            $("#Specification").keyup(function (event) {
                var Specification = $(this).val();
                $("#Specificationlabel").text(Specification);
            })
            $("#Variant").keyup(function (event) {
                var Specification = $(this).val();
                $("#Variantlabel").text(Specification);
            })
        });
    </script>
</head>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Part</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="col-md-3">
            @Html.Label("PartType: ")
            @Html.Label(" ", new { id = "PartTypelabel" })
        </div>
        <div class="col-md-3">
            @Html.Label("SubCategory: ")
            @Html.Label(" ", new { id = "SubCategorylabel" })
        </div>
        <div class="col-md-3">
            @Html.Label("Specification: ")
            @Html.Label(" ", new { id = "Specificationlabel" })
        </div>
        <div class="col-md-3">
            @Html.Label("Variant: ")
            @Html.Label(" ",new { id = "Variantlabel" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-3">
            @Html.DropDownList("PartType", new SelectList(ViewBag.ListData, "ID", "Name"), htmlAttributes: new { @id = "PartType" , @class = "form-control" })
            
        </div>
        <div class="col-md-3">
            @Html.DropDownList("SubCategory", new SelectList(ViewBag.ListData, "ID", "Name"), htmlAttributes: new { @id = "SubCategory", @class = "form-control" })
        </div>
        <div class="col-md-3">
            @Html.Editor("Specification", new { htmlAttributes = new { @id = "Specification", @class = "form-control" } })
        </div>
        <div class="col-md-3">
            @Html.Editor("Variant", new { htmlAttributes = new { @id = "Variant", @class = "form-control" } })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PartId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PartId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PartId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PartName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PartName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PartName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PartDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PartDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PartDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NovenaTecPartNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NovenaTecPartNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NovenaTecPartNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SwissRanksPartNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SwissRanksPartNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SwissRanksPartNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OEMPartNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OEMPartNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OEMPartNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VendorPartNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VendorPartNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VendorPartNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedUserId, "CreatedUserId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CreatedUserId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CreatedUserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApprovedUserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApprovedUserId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApprovedUserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    
    @Scripts.Render("~/bundles/jqueryval")
}

